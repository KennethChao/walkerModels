function jacobianStanceEnd = jacobianBoundaryCostXEnd(l0,theta0,l0d,theta0d,lEnd,thetaEnd,lEndd,thetaEndd,g,k,beta)
%JACOBIANBOUNDARYCOSTXEND
%    JACOBIANSTANCEEND = JACOBIANBOUNDARYCOSTXEND(L0,THETA0,L0D,THETA0D,LEND,THETAEND,LENDD,THETAENDD,G,K,BETA)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    11-Sep-2018 14:31:23

t2 = sin(thetaEnd);
t3 = cos(thetaEnd);
t4 = cos(theta0);
t5 = l0d.*t4;
t6 = sin(theta0);
t7 = lEnd.*t2.*thetaEndd;
t9 = lEndd.*t3;
t10 = l0.*t6.*theta0d;
t8 = t5+t7-t9-t10;
t11 = lEndd.^2;
t12 = t2.^2;
t13 = t11.*t12;
t14 = g.*t6.*2.0;
t15 = lEnd.^2;
t16 = thetaEndd.^2;
t17 = t3.^2;
t18 = t15.*t16.*t17;
t19 = lEnd.*lEndd.*t2.*t3.*thetaEndd.*2.0;
t23 = g.*lEnd.*t2.*2.0;
t20 = t13+t14+t18+t19-t23;
t21 = sqrt(t20);
t22 = conj(t21);
t24 = 1.0./t22;
t25 = l0d.*t6;
t26 = l0.*t4.*theta0d;
t27 = -t22+t25+t26;
t28 = thetaEnd.*2.0;
t29 = sin(t28);
t30 = lEndd.*t2;
t31 = lEnd.*t3.*thetaEndd;
t32 = t30+t31;
jacobianStanceEnd = reshape([t2.*t8.*thetaEndd.*2.0,-t24.*t27.*(g.*t2.*-2.0+lEnd.*t16.*t17.*2.0+lEndd.*t2.*t3.*thetaEndd.*2.0),t8.*t32.*2.0,-t24.*t27.*(t11.*t29-g.*lEnd.*t3.*2.0-t15.*t16.*t29+lEnd.*lEndd.*thetaEndd.*cos(t28).*2.0),t3.*t8.*-2.0,t2.*t24.*t27.*t32.*-2.0,lEnd.*t2.*t8.*2.0,lEnd.*t3.*t24.*t27.*t32.*-2.0,0.0,0.0,0.0,0.0],[2,6]);

function jacobianStanceEnd = jacobianBoundaryCostXEnd(l0,theta0,l0d,theta0d,lEnd,thetaEnd,lEndd,thetaEndd,g,k,beta)
%JACOBIANBOUNDARYCOSTXEND
%    JACOBIANSTANCEEND = JACOBIANBOUNDARYCOSTXEND(L0,THETA0,L0D,THETA0D,LEND,THETAEND,LENDD,THETAENDD,G,K,BETA)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    10-Sep-2018 16:12:29

t2 = sin(thetaEnd);
t3 = cos(thetaEnd);
t4 = cos(theta0);
t5 = l0d.*t4;
t6 = sin(theta0);
t7 = lEnd.*t2.*thetaEndd;
t9 = lEndd.*t3;
t10 = l0.*t6.*theta0d;
t8 = t5+t7-t9-t10;
t11 = lEndd.^2;
t12 = t2.^2;
t13 = t11.*t12;
t14 = sin(beta);
t15 = g.*t14.*2.0;
t16 = lEnd.^2;
t17 = thetaEndd.^2;
t18 = t3.^2;
t19 = t16.*t17.*t18;
t20 = lEnd.*lEndd.*t2.*t3.*thetaEndd.*2.0;
t24 = g.*lEnd.*t2.*2.0;
t21 = t13+t15+t19+t20-t24;
t22 = sqrt(t21);
t23 = conj(t22);
t25 = 1.0./t23;
t26 = l0d.*t6;
t27 = l0.*t4.*theta0d;
t28 = -t23+t26+t27;
t29 = thetaEnd.*2.0;
t30 = sin(t29);
t31 = lEndd.*t2;
t32 = lEnd.*t3.*thetaEndd;
t33 = t31+t32;
jacobianStanceEnd = reshape([t2.*t8.*thetaEndd.*2.0,-t25.*t28.*(g.*t2.*-2.0+lEnd.*t17.*t18.*2.0+lEndd.*t2.*t3.*thetaEndd.*2.0),t8.*t33.*2.0,-t25.*t28.*(t11.*t30-g.*lEnd.*t3.*2.0-t16.*t17.*t30+lEnd.*lEndd.*thetaEndd.*cos(t29).*2.0),t3.*t8.*-2.0,t2.*t25.*t28.*t33.*-2.0,lEnd.*t2.*t8.*2.0,lEnd.*t3.*t25.*t28.*t33.*-2.0,0.0,0.0,0.0,0.0],[2,6]);
